# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Get Git commit SHA
      id: git_sha
      run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Get branch name
      id: branch_name
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
  
    - name: Changing permissions for mvnw
      run: chmod +x mvnw

        #- name: Verify Maven Wrapper presence
        #run: ls -al .mvn/wrapper/maven-wrapper.jar
   
    - name: Build with Maven
      run: ./mvnw clean verify 

    - name: Run Tests
      run: ./mvnw test

    - name: Build and Publish to Docker repo
      run: | 
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker build -t anil93980/demo-app:${{ env.BRANCH_NAME }}-${{ env.GIT_SHA }} . 
        docker push anil93980/demo-app:${{ env.BRANCH_NAME }}-${{ env.GIT_SHA }}

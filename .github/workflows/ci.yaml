# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Get Git Branch and Git commit SHA
      run: | 
        echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
  
    - name: Changing permissions for mvnw
      run: chmod +x mvnw
   
    - name: Build and Test with Maven
      run: ./mvnw clean verify 

    - name: Build Docker Image
      run: docker build -t anil93980/demo-app:${{ env.BRANCH_NAME }}-${{ env.GIT_SHA }} . 
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'anil93980/demo-app:${{ env.BRANCH_NAME }}-${{ env.GIT_SHA }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'

    - name: Push image to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin 
        docker push anil93980/demo-app:${{ env.BRANCH_NAME }}-${{ env.GIT_SHA }}
